# handlers/order.py
from aiogram import Router
from aiogram.types import Message

from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import datetime
import random

router = Router()


# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è FSM
class OrderState(StatesGroup):
    waiting_for_name = State()
    waiting_for_phone = State()
    waiting_for_city = State()
    waiting_for_part = State()
    waiting_for_car_number = State()
    waiting_for_confirm = State()


# ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
MANAGER_ID = 6997654564


# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑–∞
def generate_order_number():
    return f"ORD-{datetime.datetime.now().strftime('%Y%m%d')}-{random.randint(1000, 9999)}"


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã
def get_cancel_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑")]],
        resize_keyboard=True
    )


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
def get_confirm_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑")],
            [KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")]
        ],
        resize_keyboard=True
    )


# –ù–∞—á–∞–ª–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
@router.message(F.text == "‚úÖ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞")
async def start_order_process(message: Message, state: FSMContext):
    await state.clear()

    await message.answer(
        "üìù –ù–∞—á–∏–Ω–∞–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞!\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:",
        reply_markup=get_cancel_keyboard()
    )
    await state.set_state(OrderState.waiting_for_name)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏
@router.message(OrderState.waiting_for_name, F.text != "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑")
async def process_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)

    await message.answer(
        "üìû –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä:\n\n"
        "–ü—Ä–∏–º–µ—Ä: +79123456789 –∏–ª–∏ 89123456789",
        reply_markup=get_cancel_keyboard()
    )
    await state.set_state(OrderState.waiting_for_phone)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@router.message(OrderState.waiting_for_phone, F.text != "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑")
async def process_phone(message: Message, state: FSMContext):
    await state.update_data(phone=message.text)

    await message.answer(
        "üèôÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:",
        reply_markup=get_cancel_keyboard()
    )
    await state.set_state(OrderState.waiting_for_city)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ—Ä–æ–¥–∞
@router.message(OrderState.waiting_for_city, F.text != "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑")
async def process_city(message: Message, state: FSMContext):
    await state.update_data(city=message.text)

    await message.answer(
        "üîß –û–ø–∏—à–∏—Ç–µ, –∫–∞–∫—É—é –∑–∞–ø—á–∞—Å—Ç—å –Ω—É–∂–Ω–æ –∑–∞–∫–∞–∑–∞—Ç—å:\n\n"
        "–ü—Ä–∏–º–µ—Ä: '–ü–µ—Ä–µ–¥–Ω–∏–π –±–∞–º–ø–µ—Ä –Ω–∞ Toyota Camry 2015 –≥–æ–¥–∞'",
        reply_markup=get_cancel_keyboard()
    )
    await state.set_state(OrderState.waiting_for_part)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è –∑–∞–ø—á–∞—Å—Ç–∏
@router.message(OrderState.waiting_for_part, F.text != "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑")
async def process_part(message: Message, state: FSMContext):
    await state.update_data(part_description=message.text)

    await message.answer(
        "üöó –í–≤–µ–¥–∏—Ç–µ –≥–æ—Å–Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è (–µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–µ–Ω):\n\n"
        "–ü—Ä–∏–º–µ—Ä: –ê123–í–°77 –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º",
        reply_markup=get_cancel_keyboard()
    )
    await state.set_state(OrderState.waiting_for_car_number)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ—Å–Ω–æ–º–µ—Ä–∞
@router.message(OrderState.waiting_for_car_number)
async def process_car_number(message: Message, state: FSMContext):
    car_number = message.text if message.text != "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑" else "–ù–µ —É–∫–∞–∑–∞–Ω"
    await state.update_data(car_number=car_number)

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    data = await state.get_data()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–≤–æ–¥–∫—É –∑–∞–∫–∞–∑–∞
    order_summary = (
        "üìã –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞:\n\n"
        f"üë§ –ò–º—è: {data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üèôÔ∏è –ì–æ—Ä–æ–¥: {data.get('city', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üöó –ì–æ—Å–Ω–æ–º–µ—Ä: {data.get('car_number', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üîß –ó–∞–ø—á–∞—Å—Ç—å: {data.get('part_description', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}\n\n"
        "‚úÖ –í—Å–µ –≤–µ—Ä–Ω–æ? –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑:"
    )

    await message.answer(
        order_summary,
        reply_markup=get_confirm_keyboard()
    )
    await state.set_state(OrderState.waiting_for_confirm)


# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
@router.message(OrderState.waiting_for_confirm, F.text == "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑")
async def confirm_order(message: Message, state: FSMContext):
    data = await state.get_data()
    order_number = generate_order_number()

    # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_message = (
            f"üéâ –ó–∞–∫–∞–∑ #{order_number} –æ—Ñ–æ—Ä–º–ª–µ–Ω!\n\n"
            "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É.\n"
            "üìû –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.\n"
            "‚è∞ –í—Ä–µ–º—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è: " + datetime.datetime.now().strftime("%d.%m.%Y %H:%M")
    )

    # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    manager_message = (
        f"üö® –ù–û–í–´–ô –ó–ê–ö–ê–ó #{order_number}\n\n"
        f"üë§ –ö–ª–∏–µ–Ω—Ç: {data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üèôÔ∏è –ì–æ—Ä–æ–¥: {data.get('city', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üöó –ì–æ—Å–Ω–æ–º–µ—Ä: {data.get('car_number', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üîß –ó–∞–ø—á–∞—Å—Ç—å: {data.get('part_description', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
        f"‚è∞ –í—Ä–µ–º—è: {datetime.datetime.now().strftime('%d.%m.%Y %H:%M')}\n"
        f"üë§ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.from_user.id}"
    )

    await message.answer(user_message, reply_markup=ReplyKeyboardRemove())

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É
    try:
        await message.bot.send_message(
            chat_id=MANAGER_ID,
            text=manager_message
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É: {e}")
        await message.answer(
            "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É."
        )

    await state.clear()


# –û—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞ –Ω–∞ –ª—é–±–æ–º —ç—Ç–∞–ø–µ
@router.message(StateFilter(OrderState), F.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑")
@router.message(OrderState.waiting_for_confirm, F.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
async def cancel_order(message: Message, state: FSMContext):
    await message.answer(
        "‚ùå –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        reply_markup=ReplyKeyboardRemove()
    )
    await state.clear()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@router.message(StateFilter(OrderState))
async def process_incorrect_input(message: Message):
    await message.answer(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.",
        reply_markup=get_cancel_keyboard()
    )